View(df)
head(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen)
head(df)
head(lncbed)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>% head()
Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>% head()
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::select(lncchr = V1,
lncstart = V2,
lncend = V3,
-V5,-V6)
View(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3,
-V5,-V6)
View(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>% drop_na()
View(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na()
View(df)
View(Pro_df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na()
View(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na() %>%
dplyr::filter(chr = str_detect('CHR'))
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na() %>%
dplyr::filter(chr = str_detect(chr, 'CHR'))
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na() %>%
dplyr::filter(grepl('CHR', chr))
View(df)
df <- Pro_df %>% mutate(V7 = tolower(V7)) %>% distinct(V7, trans_id) %>%
left_join(Pro_anno, by = c('V7'='external_gene_name')) %>%
dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = V7,
symbol = ensembl_gene_id,
trans_id = trans_id) %>%
left_join(trans2gene, by = c('trans_id'= 'trans_id')) %>%
dplyr::select(-exon_num, -translen) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3) %>%
dplyr::select(-V5, -V6) %>% drop_na() %>%
dplyr::filter(!grepl('CHR', chr))
View(df)
head(df)
bed1 <- df %>% dplyr::select(chr, start, end, name)
bed2 <- df %>% dplyr::select(chr = lncchr,
start = lncstart,
end = lncend,
name = gene_id)
View(bed2)
save(bed1, bed2, file = 'beddata.RData')
df
unique(df$symbol)
table(df$symbol)
table(df$name)
table(df$gene_id)
TF_df_res2
View(TF_df_res2)
View(TF_df_res2)
tmpdf <- distinct(TF_df_res2)
table(tmpdf$TF)
library(ComplexHeatmap)
View(tmpdf)
View(TF_df)
unique(TF_df_res$TF)
unique(TF_df_res$trans_id)
TF_df_res2 <- left_join(TF_df_res, gene.df, by = c('TF'='SYMBOL'))
View(TF_df_res2)
head(TF_df_res)
TF_circol_df <- dplyr::select(TF_circol_df, TF, trans_id) %>%
left_join(trans2gene, by = 'trans_id')
TF_circol_df <- dplyr::select(TF_df_res, TF, trans_id) %>%
left_join(trans2gene, by = 'trans_id')
View(TF_circol_df)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct()
TF_anno <- getBM(attributes =c('ensembl_gene_id',
'external_gene_name',
"description",
"entrezgene_id",
'chromosome_name',
'start_position',
'end_position'),
filters = 'external_gene_name',
values = unique(TF_circol_df$TF),
mart = mart)
View(TF_anno)
TF_anno <- getBM(attributes =c('ensembl_gene_id',
'external_gene_name',
"description",
"entrezgene_id",
'chromosome_name',
'start_position',
'end_position'),
filters = 'external_gene_name',
values = unique(TF_df_res$TF),
mart = mart)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct() %>%
left_join(TF_anno, c('external_gene_name','TF'))
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct() %>%
left_join(TF_anno, c('ensembl_gene_id' = 'TF'))
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct() %>%
left_join(TF_anno, c('external_gene_name' = 'TF'))
View(TF_circol_df)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>% head()
left_join(TF_df_res, trans2gene, by = 'trans_id') %>% head()
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>% head()
View(TF_circol_df)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id')
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct() %>%
left_join(TF_anno, c('TF' = 'external_gene_name'))
View(TF_circol_df)
TF_circol_df <- left_join(TF_df_res, trans2gene, by = 'trans_id') %>%
dplyr::select(TF, gene_id) %>% distinct() %>%
left_join(TF_anno, c('TF' = 'external_gene_name')) %>%
left_join(lncbed, by = c('gene_id' = 'V4')) %>%
dplyr::rename(lncchr = V1,
lncstart = V2,
lncend = V3)
View(TF_circol_df)
beda_TF <- TF_circol_df %>% dplyr::select(chr, start, end, name)
head(beda_TF)
head(TF_circol_df)
beda_TF <- TF_circol_df %>% dplyr::select(chromosome_name, start_position, end_position, TF)
bedb_lnc <- TF_circol_df %>% dplyr::select(chr = lncchr,
start = lncstart,
end = lncend,
name = gene_id)
beda_TF <- TF_circol_df %>% dplyr::select(chromosome_name, start_position, end_position, TF)
bedb_lnc <- TF_circol_df %>% dplyr::select(chr = lncchr,
start = lncstart,
end = lncend,
name = gene_id)
bed1 <- beda_TF %>% mutate(chr = str_c('chr', chr))
beda_TF <- TF_circol_df %>% dplyr::select(chr = chromosome_name,
start = start_position,
end = end_position,
name = TF)
bedb_lnc <- TF_circol_df %>% dplyr::select(chr = lncchr,
start = lncstart,
end = lncend,
name = gene_id)
bed1 <- beda_TF %>% mutate(chr = str_c('chr', chr))
bed2 <- bedb_lnc %>% mutate(chr = str_c('chr', chr))
df2 <- as.data.frame(table(bed1$name))
View(df2)
df <- data.frame(x = names(table(bed2$name)),
y = table(bed2$name))
View(df)
prob <- names(table(bed2$name)[table(bed2$name)>1])
#prob2 <- names(table(bed1$name)[table(bed1$name) > 10])
bed_anno_lnc <- dplyr::filter(bed2, name %in% prob) %>% distinct() %>% mutate(class = 'lnc')
bed_anno_TF <- distinct(bed1) %>% mutate(class = 'pro')
bed_anno <- rbind(bed_anno_lnc, bed_anno_pro)
bed_anno <- rbind(bed_anno_lnc, bed_anno_TF)
bed_anno <- bed_anno %>% mutate(name = str_replace_all(name, 'ENSMUSG', ''),
name = str_replace_all(name, 'NONMMUG', ''))
circos.initializeWithIdeogram(species = 'mm10')
circos.genomicLabels(bed_anno, labels.column = 4, side = "outside",
col = as.numeric(factor(bed_anno[[5]])),
line_col = as.numeric(factor(bed_anno[[5]])),
labels_height = 0.1,
cex = 0.35, connection_height = 0.08)
circos.genomicLink(bed1, bed2, col = rand_color(nrow(bed1)),
border = NA)
text(0, 0, "Interactions between dy-lncRNAs and TFs", cex = 0.8)
circos.clear()
prob <- names(table(bed2$name)[table(bed2$name)>2])
#prob2 <- names(table(bed1$name)[table(bed1$name) > 10])
bed_anno_lnc <- dplyr::filter(bed2, name %in% prob) %>% distinct() %>% mutate(class = 'lnc')
bed_anno_TF <- distinct(bed1) %>% mutate(class = 'pro')
bed_anno <- rbind(bed_anno_lnc, bed_anno_TF)
bed_anno <- bed_anno %>% mutate(name = str_replace_all(name, 'ENSMUSG', ''),
name = str_replace_all(name, 'NONMMUG', ''))
circos.initializeWithIdeogram(species = 'mm10')
circos.genomicLabels(bed_anno, labels.column = 4, side = "outside",
col = as.numeric(factor(bed_anno[[5]])),
line_col = as.numeric(factor(bed_anno[[5]])),
labels_height = 0.1,
cex = 0.35, connection_height = 0.08)
circos.genomicLink(bed1, bed2, col = rand_color(nrow(bed1)),
border = NA)
text(0, 0, "Interactions between dy-lncRNAs and TFs", cex = 0.8)
circos.clear()
#===> DESeq2 analysis
if(T){
condition <- factor(c(rep("control", 3), rep("week2", 3),rep("week4", 3),
rep("week7", 3), rep("week10", 3)),
levels = c("control", "week2","week4","week7","week10"))
colData <- data.frame(row.names = colnames(gene_count), condition)
dds <- DESeqDataSetFromMatrix(gene_count, colData, design= ~ condition)
dds <- DESeq(dds)
}
condition <- factor(c(rep("control", 3), rep("week2", 3),rep("week4", 3),
rep("week7", 3), rep("week10", 3)),
levels = c("control", "week2","week4","week7","week10"))
colData <- data.frame(row.names = colnames(gene_count), condition)
#===> 批次
gene_count <- input_matrix_count$mRNA_lncRNA_count %>%
column_to_rownames(var = 'gene_id')
boxplot(log2(gene_count+1))
condition <- factor(c(rep("control", 3), rep("week2", 3),rep("week4", 3),
rep("week7", 3), rep("week10", 3)),
levels = c("control", "week2","week4","week7","week10"))
colData <- data.frame(row.names = colnames(gene_count), condition)
View(colData)
cnts <- matrix(rnbinom(n=1000, mu=100, size=1/0.5), ncol=10)
cond <- factor(rep(1:2, each=5))
# object construction
dds <- DESeqDataSetFromMatrix(cnts, DataFrame(cond), ~ cond)
cnts
DataFrame(cond)
countData <- matrix(1:100,ncol=4)
condition <- factor(c("A","A","B","B"))
dds <- DESeqDataSetFromMatrix(countData, DataFrame(condition), ~ condition)
DataFrame(condition)
#===> lncRNA classes
lncRNA_classes <- read_table2("data/lncRNA_classes_pbs.txt")
View(lncRNA_classes)
source('Utils.R')
load('outcomes/inputdata/input.RData')
load('anno.RData');mart
trans2gene <- input_matrix_count$exon_trans
lncbed <- read.table('data/final_lnc.bed')
filepath <-list.files("candidate_results_all/", full.names = T)
#===> interaction with TF
if(T){
TFpath <- paste(filepath, '/', basename(filepath),
'_trans1/transcription_regulation/filter_details.txt', sep = '')
TF_list <- sapply(filepath, function(x){
TFpath <- paste(x, '/', basename(x),
'_trans1/transcription_regulation/filter_details.txt', sep = '')
if(file.info(TFpath)$size > 0 & !is.na(file.info(TFpath)$size)){
df <- read.table(TFpath, header = T, sep = '\t')
df$trans_id <- basename(x)
return(df)}}, USE.NAMES = T)
for(i in names(TF_list)){
if(is.null(TF_list[[i]])){TF_list[i] <- NULL}
}
# do.call can bind the list With or without empty elements in list
TF_df <- do.call(rbind, TF_list);rownames(TF_df) <- NULL
}
#===> interaction with protein
if(T){
Pro_list <- sapply(filepath, function(x){
Propath <- paste(x, '/', basename(x),
'_trans1/protein_interaction/intersected.clip.peak', sep = '')
if(file.info(Propath)$size > 0 & !is.na(file.info(Propath)$size)){
df <- read.table(Propath, header = F, sep = '\t')
df$trans_id <- basename(x)
return(df)}}
, USE.NAMES = T)
for(i in names(Pro_list)){
if(is.null(Pro_list[[i]])){Pro_list[i] <- NULL}}
Pro_df <- do.call(rbind, Pro_list);rownames(Pro_df) <- NULL
}
View(Pro_df)
Pro_df <- Pro_df %>% mutate(V7 = tolower(V7),
V7 = str_replace_all(V7, 'roquin-1','rc3h1'),
V7 = str_replace_all(V7, 'aid','aicda'),
V7 = str_replace_all(V7, '^celf$','cebpd'),
V7 = str_replace_all(V7, 'dazl\\?','dazl'),
V7 = str_replace_all(V7, 'rod1/ptbp3','ptbp3'),
V7 = str_replace_all(V7, 'qki5','Qk'),
V7 = str_replace_all(V7, '^nova$','Hnrnpk'))
Pro_anno <- getBM(attributes =c('ensembl_gene_id',
'external_gene_name',
'description',
'entrezgene_id',
'chromosome_name',
'start_position',
'end_position'),
filters = 'external_gene_name',
values = unique(Pro_df$V7),
mart = mart) %>%
mutate(external_gene_name = tolower(external_gene_name)) %>%
dplyr::filter(str_detect(chromosome_name, '^[0-9]+|^[XY]'))
View(Pro_anno)
loadsource('Utils.R')
load('outcomes/DEanalysis/DE_results_inte.RData') # DE genes
load('outcomes/masigpro/dynamicdf.RData') # dynamic genes
mygetenrichedgenefromkk2 <- function(genelist){
# Colorectal cancer => mmu05210
# Wnt signaling pathway => mmu04310
# JAK-STAT signaling pathway => mmu04630
# TGF-beta signaling pathway => mmu04350
# Notch signaling pathway => mmu04330
# p53 signaling pathway => mmu04115
# MAPK signaling pathway => mmu04010
# mTOR signaling pathway => mmu04150
# ErbB signaling pathway => mmu04012
pathwaylist <- c('mmu05210','mmu04310','mmu04630',
'mmu04350','mmu04330','mmu04115',
'mmu04010','mmu04150','mmu04012')
gene.df <- bitr(genelist, fromType = "ENSEMBL",
toType = c("SYMBOL", "ENTREZID"),
OrgDb = org.Mm.eg.db)
kk <- enrichKEGG(gene = gene.df$ENTREZID,
organism = 'mmu',
pvalueCutoff = 0.05)
kk_res <- as.data.frame(kk)
df <- dplyr::tbl_df(kk_res) %>%
dplyr::filter(ID %in% pathwaylist) %>%
separate_rows(geneID, sep = '/') %>%
dplyr::select(ID, Description, geneID) %>%
left_join(gene.df, by = c('geneID'='ENTREZID'))
return(df)
} #ENSEMBL SYMBOL ENTREZID
#===> DE expression genes(coding and lnc)
dedf <- dplyr::filter(DE_results_inte$DE_each_inte,
direction %in% c('up','down'),
abs(log2FoldChange) >= 1)
table(unique(dynamicdf$gene_id) %in% unique(dedf$gene_id))
#4875 dynamic and de genes
dynamic_de_df <- dynamicdf %>% dplyr::filter(gene_id %in% dedf$gene_id)
#dynamic and DE coding:4068;noncoding:807
table(dynamic_de_df$gene_type)
crcgene <- mygetenrichedgenefromkk2(dynamic_de_df$gene_id) %>%
distinct(ENSEMBL) %>% pull(ENSEMBL)
if(T){
tmplist <- list()
for(i in 1:9){
df <- mygetenrichedgenefromkk2(
dynamic_de_df[dynamic_de_df$cluster == i,]$gene_id)
cluster = str_c('cluster', i)
df$cluster = cluster
tmplist[[cluster]] <- df
}
table <- do.call(rbind, tmplist)
rownames(table) <- NULL
}
dynamic_de_crc_df <- table
save(dynamic_de_crc_df, file = 'outcomes/crcdynamic/dynamic_de_crc_df.RData')
df2 <- mygetenrichedgenefromkk2(table$ENSEMBL)
group_by(table, Description, cluster) %>%
summarise(num = n())
load('outcomes/crcdynamic/dynamic_de_crc_df.RData')
#===>
# calculate the correlation between dy_de_lnc and dy_de_crc_coding
load('outcomes/inputdata/input.RData')
library(Hmisc)
dy_de_lnc <- dynamic_de_df[dynamic_de_df$gene_type == 'lnc',] %>%
distinct(gene_id) %>% pull(gene_id)
dy_de_crc_coding <- unique(dynamic_de_crc_df
